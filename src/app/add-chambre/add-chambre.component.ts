import { Component } from '@angular/core';
import { FormBuilder, FormGroup, Validators } from '@angular/forms';
import { FoyerService } from '../service/foyer.service';
import { Chambre, TypeChambre } from '../models/Chambre'; // Make sure to import your Chambre model

@Component({
  selector: 'app-add-chambre',
  templateUrl: './add-chambre.component.html',
  styleUrls: ['./add-chambre.component.css']
})
export class AddChambreComponent {
  chambreForm: FormGroup; // Form group for chambre
  typesChambre = Object.values(TypeChambre); // Get available chambre types
  error: string | null = null; // To hold any error message

  constructor(
    private fb: FormBuilder,
    private foyerService: FoyerService
  ) {
    this.chambreForm = this.fb.group({
      numeroChambre: ['', [Validators.required, Validators.min(1)]], // Ensure chambre number is required and greater than 0
      typeChambre: ['', Validators.required] // Ensure chambre type is required
    });
  }

  onSubmit(): void {
    if (this.chambreForm.valid) {
      const newChambre: Chambre = {
        idChambre: 0, // Assuming the ID is generated by the server
        numeroChambre: this.chambreForm.value.numeroChambre,
        typeChambre: this.chambreForm.value.typeChambre,
        bloc: undefined, // Set this according to your logic
        reservations: [] // Set this according to your logic
      };

      this.foyerService.addChambre(newChambre).subscribe({
        next: () => {
          console.log('Chambre added successfully');
          this.chambreForm.reset(); // Reset form after submission
        },
        error: (err) => {
          this.error = 'Failed to add chambre. Please try again later.'; // Set error message
          console.error(err); // Log error for debugging
        }
      });
    }
  }
}
